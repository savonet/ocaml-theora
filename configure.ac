
# check for one particular file of the sources 
AC_INIT(ocaml-theora, 0.2.0, savonet-users@lists.sourceforge.net)

VERSION=$PACKAGE_VERSION
AC_MSG_RESULT([configuring $PACKAGE_STRING])

# Add prefix to compilation variables
# if passed
if test "x$prefix" != "xNONE"; then
	CFLAGS="$CFLAGS -I$prefix/include"
	LDFLAGS="$LDFLAGS -L$prefix/lib"
	CPPFLAGS="$CPPFLAGS -I$prefix/include"
fi

AC_CHECK_OCAML_COMPILERS()

AC_PROG_CC()
AC_CHECK_TOOL([AR],[ar],no)
PKG_PROG_PKG_CONFIG()

# PKG_CHECK_MODULES loses when you need --libs-only-[lL]
if ! $PKG_CONFIG --exists theoradec; then
        AC_MSG_ERROR([libtheoradec not found])
fi
if ! $PKG_CONFIG --exists theoraenc; then
        AC_MSG_ERROR([libtheoraenc not found])
fi
libtheora_CFLAGS=`$PKG_CONFIG --cflags theoradec` 
libtheora_CFLAGS="$libtheora_CFLAGS`$PKG_CONFIG --cflags theoraenc`"
AC_SUBST([libtheora_CFLAGS])
libtheora_LIBS=`$PKG_CONFIG --libs-only-l theoradec`
libtheora_LIBS="$libtheora_LIBS `$PKG_CONFIG --libs-only-l theoraenc`"
AC_SUBST([libtheora_LIBS])
libtheora_LDFLAGS=`$PKG_CONFIG --libs-only-L theoradec` 
libtheora_LDFLAGS="$libtheora_LDFLAGS `$PKG_CONFIG --libs-only-L theoraenc`"
AC_SUBST([libtheora_LDFLAGS])

AC_ARG_WITH([ogg-dir],AC_HELP_STRING([--with-ogg-dir=path],
        [use "path" as the location of ocaml-ogg (autodetected by default)]))
if test -z "$with_ogg_dir"; then
  AC_MSG_CHECKING(for ocaml-ogg)
  if ($OCAMLFIND query ogg > /dev/null 2>&1); then
        OCAMLOGG_INC=`$OCAMLFIND query ogg`
        AC_MSG_RESULT(ok)
  else
        AC_MSG_ERROR(not found.)
  fi
else
  echo $with_ogg_dir | grep ^/ > /dev/null 2>&1 \
  || with_ogg_dir=$PWD/$with_ogg_dir
  OCAMLOGG_INC="$with_ogg_dir"
fi
AC_SUBST(OCAMLOGG_INC)

# substitutions to perform
AC_SUBST(VERSION)

# Finally create the Makefile and samples
AC_CONFIG_FILES([Makefile],[chmod a-w Makefile])
AC_CONFIG_FILES([src/META])
AC_CONFIG_FILES([src/Makefile])
AC_OUTPUT
